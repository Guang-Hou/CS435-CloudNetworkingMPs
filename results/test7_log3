   Saw a new neighbor 2
 Created LSA packet. fromId 3, destId 3, distance: 0, nexHop 3, and nodesInPath [3].
 Inside sharePathsToNewNeighbor, sharing my path fromId 3 -> destId 3 to my neighbor 2, the nodes are [3].
 Received LSA from neighbor 2, for destId 2, the distance is 0, the nexHop is 2, and its PATH is: [2].
 I do not have a path to desId 2, but neighbor 2 has, I will use it.
   Saw a new neighbor 4
 Created LSA packet. fromId 3, destId 3, distance: 0, nexHop 3, and nodesInPath [3].
 Inside sharePathsToNewNeighbor, sharing my path fromId 3 -> destId 3 to my neighbor 4, the nodes are [3].
 Received LSA from neighbor 4, for destId 4, the distance is 0, the nexHop is 4, and its PATH is: [4].
 I do not have a path to desId 4, but neighbor 4 has, I will use it.
 Received LSA from neighbor 2, for destId 255, the distance is 55, the nexHop is 1, and its PATH is: [2,1,255].
 I do not have a path to desId 255, but neighbor 2 has, I will use it.
 Received LSA from neighbor 2, for destId 5, the distance is 1, the nexHop is 5, and its PATH is: [2,5].
 I do not have a path to desId 5, but neighbor 2 has, I will use it.
 Received LSA from neighbor 2, for destId 1, the distance is 3, the nexHop is 5, and its PATH is: [2,5,1].
 I do not have a path to desId 1, but neighbor 2 has, I will use it.
 Created LSA packet. fromId 3, destId 1, distance: 4, nexHop 2, and nodesInPath [3,2,5,1].
 Inside sendLSAToNeighbors, sending my newer path fromId 3 -> destId 1 to my neighbor 4, the nodes are [3,2,5,1].
 Created LSA packet. fromId 3, destId 5, distance: 2, nexHop 2, and nodesInPath [3,2,5].
 Inside sendLSAToNeighbors, sending my newer path fromId 3 -> destId 5 to my neighbor 4, the nodes are [3,2,5].
 Created LSA packet. fromId 3, destId 255, distance: 56, nexHop 2, and nodesInPath [2,1,3,255].
 Inside sendLSAToNeighbors, sending my newer path fromId 3 -> destId 255 to my neighbor 4, the nodes are [2,1,3,255].
 Created LSA packet. fromId 3, destId 4, distance: 1, nexHop 4, and nodesInPath [3,4].
 Inside sendLSAToNeighbors, sending my newer path fromId 3 -> destId 4 to my neighbor 2, the nodes are [3,4].
 Created LSA packet. fromId 3, destId 2, distance: 1, nexHop 2, and nodesInPath [3,2].
 Inside sendLSAToNeighbors, sending my newer path fromId 3 -> destId 2 to my neighbor 4, the nodes are [3,2].
 Received LSA from neighbor 4, for destId 5, the distance is 3, the nexHop is 1, and its PATH is: [4,1,5].
 Received LSA from neighbor 4, for destId 6, the distance is 2, the nexHop is 1, and its PATH is: [4,1,6].
 I do not have a path to desId 6, but neighbor 4 has, I will use it.
 Received LSA from neighbor 4, for destId 255, the distance is 2, the nexHop is 1, and its PATH is: [4,1,255].
 We both have paths. Neighbor 4 has a better path to desId 255, I will use it.
 Received LSA from neighbor 4, for destId 7, the distance is 1, the nexHop is 7, and its PATH is: [4,7].
 I do not have a path to desId 7, but neighbor 4 has, I will use it.
 Received LSA from neighbor 4, for destId 1, the distance is 1, the nexHop is 1, and its PATH is: [4,1].
 We both have paths. Neighbor 4 has a better path to desId 1, I will use it.
 Received LSA from neighbor 2, for destId 6, the distance is 2, the nexHop is 5, and its PATH is: [2,5,6].
 We both have paths. Neighbor 2 has a better path to desId 6, I will use it.
 Received LSA from neighbor 2, for destId 255, the distance is 4, the nexHop is 5, and its PATH is: [2,1,5,255].
 Created LSA packet. fromId 3, destId 1, distance: 2, nexHop 4, and nodesInPath [3,4,1].
 Inside sendLSAToNeighbors, sending my newer path fromId 3 -> destId 1 to my neighbor 2, the nodes are [3,4,1].
 Created LSA packet. fromId 3, destId 7, distance: 2, nexHop 4, and nodesInPath [3,4,7].
 Inside sendLSAToNeighbors, sending my newer path fromId 3 -> destId 7 to my neighbor 2, the nodes are [3,4,7].
 Created LSA packet. fromId 3, destId 255, distance: 3, nexHop 4, and nodesInPath [4,1,3,255].
 Inside sendLSAToNeighbors, sending my newer path fromId 3 -> destId 255 to my neighbor 2, the nodes are [4,1,3,255].
 Created LSA packet. fromId 3, destId 6, distance: 3, nexHop 2, and nodesInPath [3,2,5,6].
 Inside sendLSAToNeighbors, sending my newer path fromId 3 -> destId 6 to my neighbor 4, the nodes are [3,2,5,6].
 Received LSA from neighbor 4, for destId 0, the distance is 557, the nexHop is 1, and its PATH is: [4,1,255,0].
 I do not have a path to desId 0, but neighbor 4 has, I will use it.
 Received LSA from neighbor 2, for destId 0, the distance is 559, the nexHop is 5, and its PATH is: [2,1,0,255,5].
 Created LSA packet. fromId 3, destId 0, distance: 558, nexHop 4, and nodesInPath [3,0,255,1,4].
 Inside sendLSAToNeighbors, sending my newer path fromId 3 -> destId 0 to my neighbor 2, the nodes are [3,0,255,1,4].
 Received send or fowd message.
receive packet message this is just the example topo... not partioned yet
 I lost neighbor node  2
 Because of this lost neighbor 2, I lost my path to destId 2, becasue the next hop is 2.
 Because of this lost neighbor 2, I lost my path to destId 5, becasue the next hop is 2.
 Because of this lost neighbor 2, I lost my path to destId 6, becasue the next hop is 2.
 chooseAlternativeForLostPaths: chose alternative path neighbor 4 to destId 6,and nodesInPath [3,4,1,6].
 chooseAlternativeForLostPaths: chose alternative path neighbor 4 to destId 5,and nodesInPath [3,4,1,5].
 chooseAlternativeForLostPaths, no alternative path to destId 2. Erased this destId from nodePaths[myNodeId].
 Created LSA packet. fromId 3, destId 6, distance: 3, nexHop 4, and nodesInPath [3,4,1,6].
 Inside sendLSAToNeighbors, sending my lost-alternative path fromId 3 -> destId 6 to my neighbor 4, the nodes are [3,4,1,6].
 Created LSA packet. fromId 3, destId 5, distance: 4, nexHop 4, and nodesInPath [3,4,1,5].
 Inside sendLSAToNeighbors, sending my lost-alternative path fromId 3 -> destId 5 to my neighbor 4, the nodes are [3,4,1,5].
 Created LSA packet. fromId 3, destId 2, distance: 0, nexHop 0, and nodesInPath [].
 Inside sendLSAToNeighbors, sending my lost-alternative path fromId 3 -> destId 2 to my neighbor 4, the nodes are [].
 Received LSA from neighbor 4, for destId 255, the distance is 57, the nexHop is 3, and its PATH is: [4,255,3,1,2].
 We both have paths. Neighbor 4 is my current nextHop and it is now using me in his path to destId 255, then I lost my path to this destId.
 Received LSA from neighbor 4, for destId 6, the distance is 0, the nexHop is 0, and its PATH is: [].
 We both have paths. Neighbor 4 has a better path to desId 6, I will use it.
 Received LSA from neighbor 4, for destId 5, the distance is 3, the nexHop is 3, and its PATH is: [4,3,2,5].
 We both have paths. Neighbor 4 is my current nextHop and it is now using me in his path to destId 5, then I lost my path to this destId.
 Received LSA from neighbor 4, for destId 1, the distance is 5, the nexHop is 3, and its PATH is: [4,1,5,2,3].
 We both have paths. Neighbor 4 is my current nextHop and it is now using me in his path to destId 1, then I lost my path to this destId.
 Received LSA from neighbor 4, for destId 0, the distance is 0, the nexHop is 0, and its PATH is: [].
 We both have paths. Neighbor 4 has a better path to desId 0, I will use it.
 chooseAlternativeForLostPaths, no alternative path to destId 1. Erased this destId from nodePaths[myNodeId].
 chooseAlternativeForLostPaths, no alternative path to destId 5. Erased this destId from nodePaths[myNodeId].
 chooseAlternativeForLostPaths, no alternative path to destId 255. Erased this destId from nodePaths[myNodeId].
 Created LSA packet. fromId 3, destId 0, distance: 1, nexHop 4, and nodesInPath [3].
 Inside sendLSAToNeighbors, sending my newer path fromId 3 -> destId 0 to my neighbor 4, the nodes are [3].
 Created LSA packet. fromId 3, destId 1, distance: 0, nexHop 0, and nodesInPath [].
 Inside sendLSAToNeighbors, sending my lost-alternative path fromId 3 -> destId 1 to my neighbor 4, the nodes are [].
 Created LSA packet. fromId 3, destId 5, distance: 0, nexHop 0, and nodesInPath [].
 Inside sendLSAToNeighbors, sending my lost-alternative path fromId 3 -> destId 5 to my neighbor 4, the nodes are [].
 Created LSA packet. fromId 3, destId 6, distance: 1, nexHop 4, and nodesInPath [3].
 Inside sendLSAToNeighbors, sending my newer path fromId 3 -> destId 6 to my neighbor 4, the nodes are [3].
 Created LSA packet. fromId 3, destId 255, distance: 0, nexHop 0, and nodesInPath [].
 Inside sendLSAToNeighbors, sending my lost-alternative path fromId 3 -> destId 255 to my neighbor 4, the nodes are [].
 Received LSA from neighbor 4, for destId 2, the distance is 1, the nexHop is 3, and its PATH is: [4].
 Received LSA from neighbor 4, for destId 5, the distance is 0, the nexHop is 0, and its PATH is: [].
 Received LSA from neighbor 4, for destId 255, the distance is 1, the nexHop is 3, and its PATH is: [4].
 Received LSA from neighbor 4, for destId 1, the distance is 1, the nexHop is 3, and its PATH is: [4].
   Saw a new neighbor 2
 Created LSA packet. fromId 3, destId 0, distance: 1, nexHop 4, and nodesInPath [3].
 Inside sharePathsToNewNeighbor, sharing my path fromId 3 -> destId 0 to my neighbor 2, the nodes are [3].
 Created LSA packet. fromId 3, destId 1, distance: 0, nexHop 0, and nodesInPath [].
 Inside sharePathsToNewNeighbor, sharing my path fromId 3 -> destId 1 to my neighbor 2, the nodes are [].
 Created LSA packet. fromId 3, destId 3, distance: 0, nexHop 3, and nodesInPath [3].
 Inside sharePathsToNewNeighbor, sharing my path fromId 3 -> destId 3 to my neighbor 2, the nodes are [3].
 Created LSA packet. fromId 3, destId 4, distance: 1, nexHop 4, and nodesInPath [3,4].
 Inside sharePathsToNewNeighbor, sharing my path fromId 3 -> destId 4 to my neighbor 2, the nodes are [3,4].
 Created LSA packet. fromId 3, destId 5, distance: 0, nexHop 0, and nodesInPath [].
 Inside sharePathsToNewNeighbor, sharing my path fromId 3 -> destId 5 to my neighbor 2, the nodes are [].
 Created LSA packet. fromId 3, destId 6, distance: 1, nexHop 4, and nodesInPath [3].
 Inside sharePathsToNewNeighbor, sharing my path fromId 3 -> destId 6 to my neighbor 2, the nodes are [3].
 Created LSA packet. fromId 3, destId 7, distance: 2, nexHop 4, and nodesInPath [3,4,7].
 Inside sharePathsToNewNeighbor, sharing my path fromId 3 -> destId 7 to my neighbor 2, the nodes are [3,4,7].
 Created LSA packet. fromId 3, destId 255, distance: 0, nexHop 0, and nodesInPath [].
 Inside sharePathsToNewNeighbor, sharing my path fromId 3 -> destId 255 to my neighbor 2, the nodes are [].
 Received LSA from neighbor 2, for destId 0, the distance is 559, the nexHop is 5, and its PATH is: [2,1,0,255,5].
 Received LSA from neighbor 2, for destId 1, the distance is 3, the nexHop is 5, and its PATH is: [2,5,1].
 Received LSA from neighbor 2, for destId 2, the distance is 0, the nexHop is 2, and its PATH is: [2].
 Received LSA from neighbor 2, for destId 4, the distance is 3, the nexHop is 5, and its PATH is: [2,5].
 Received LSA from neighbor 2, for destId 5, the distance is 1, the nexHop is 5, and its PATH is: [2,5].
 Received LSA from neighbor 2, for destId 6, the distance is 2, the nexHop is 5, and its PATH is: [2,5,6].
 Received LSA from neighbor 2, for destId 7, the distance is 3, the nexHop is 5, and its PATH is: [2,5].
 Received LSA from neighbor 2, for destId 255, the distance is 4, the nexHop is 5, and its PATH is: [2,1,5,255].
 Received LSA from neighbor 2, for destId 255, the distance is 1, the nexHop is 3, and its PATH is: [2].
 Received LSA from neighbor 4, for destId 7, the distance is 1, the nexHop is 1, and its PATH is: [4].
 We both have paths. Neighbor 4 has a better path to desId 7, I will use it.
 Received LSA from neighbor 4, for destId 1, the distance is 1, the nexHop is 1, and its PATH is: [4,1].
 Received LSA from neighbor 2, for destId 5, the distance is 1, the nexHop is 3, and its PATH is: [2].
 Received LSA from neighbor 2, for destId 1, the distance is 1, the nexHop is 3, and its PATH is: [2].
 Created LSA packet. fromId 3, destId 7, distance: 2, nexHop 4, and nodesInPath [3,4].
 Inside sendLSAToNeighbors, sending my newer path fromId 3 -> destId 7 to my neighbor 2, the nodes are [3,4].
